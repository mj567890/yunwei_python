# IT运维系统 - 生产环境配置模板
# 请复制此文件为 .env.production 并设置真实的生产环境值

# ===========================================
# 核心安全配置 (必须设置)
# ===========================================

# Flask应用密钥 (至少32位随机字符)
# 生成方法: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your-super-secure-secret-key-32-chars-minimum-here

# JWT签名密钥 (至少32位随机字符) 
# 生成方法: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your-jwt-secret-key-32-chars-minimum-here

# 运行环境
FLASK_ENV=production

# ===========================================
# 数据库配置
# ===========================================
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_USERNAME=it_ops_user
MYSQL_PASSWORD=your-strong-database-password-here
MYSQL_DATABASE=it_ops_system

# ===========================================
# Redis配置
# ===========================================
REDIS_URL=redis://localhost:6379/0
REDIS_PASSWORD=your-redis-password-here

# ===========================================
# 安全配置
# ===========================================

# 允许的前端域名 (用逗号分隔)
ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# 文件上传配置
UPLOAD_FOLDER=/var/www/it-ops/uploads
MAX_CONTENT_LENGTH=52428800

# ===========================================
# 邮件配置 (可选)
# ===========================================
MAIL_SERVER=smtp.example.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=noreply@yourdomain.com
MAIL_PASSWORD=your-email-password-here

# ===========================================
# 日志配置
# ===========================================
LOG_LEVEL=WARNING
LOG_TO_STDOUT=false

# ===========================================
# 加密密钥 (前端Token加密)
# ===========================================
# 生成方法: python -c "import secrets; print(secrets.token_urlsafe(16))"
VITE_CRYPTO_SECRET=your-frontend-crypto-secret-here

# ===========================================
# 等保2.0合规配置
# ===========================================

# 数据加密密钥 (用于敏感数据加密存储)
# 生成方法: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
DATA_ENCRYPTION_KEY=your-data-encryption-key-here

# API签名密钥 (用于API请求签名验证)
# 生成方法: python -c "import secrets; print(secrets.token_urlsafe(32))"
API_SECRET_KEY=your-api-secret-key-32-chars-minimum-here

# 是否启用API签名验证 (生产环境建议启用)
ENABLE_API_SIGNATURE=true

# 是否启用安全通信 (高安全级环境启用)
ENABLE_SECURE_COMMUNICATION=false

# 服务器私钥 (用于安全通信,PEM格式)
# 生成方法: 参考部署文档
SERVER_PRIVATE_KEY=your-server-private-key-pem-here

# 服务器公钥 (用于安全通信,PEM格式)
SERVER_PUBLIC_KEY=your-server-public-key-pem-here